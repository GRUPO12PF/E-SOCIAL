@use '../base/variables' as v;
@use '../base/mixins' as m;

.searchBar {
    display: flex;
    flex-wrap: wrap;
    font-size: large;
    font-weight: bold;
    background: v.$colorNav;
    justify-content: center;
  }
.select{
    display: flex;
    background-color: #f0f8ff;
}
.filter{
    display: flex;
    background-color: #f0f8ff;
    justify-content: space-between;
}

.btnS {
    background-color: #f0f8ff
}

.btnS:hover:hover {
    transform: scale(1.10);
}

.btnR {
    justify-content: space-between;
    margin-left:  10px;
    border-radius: 5px;
    margin-right:5px;
    padding-top: 4px;
    background-color: #f0f8ff;
    font-size: 1.5rem;
}

.btnR:hover {
    transform: scale(1.05);
    color: rgb(247, 243, 243);
    color: rgb(47, 47, 47);
}
.divFilter{
    margin-left: 20px;
    display: flex;
    justify-content: space-between;
}

//Vars 

:root {
    --rad: .7rem;
    --dur: .3s;
    --color-dark: #2f2f2f;
    --color-light: #f0f8ff;
    --color-brand: #BC3908;
    --font-fam: "Roboto", sans-serif;
    --height: 3rem;
    --btn-width: 6rem;
    --bez: cubic-bezier(0, 0, 0.43, 1.49);
  }
.formbusqueda {
    position: relative;
    width: 25rem;
    background: var(--color-brand);
    border-radius: var(--rad);
    margin-top: 2.5rem;
    margin-bottom: 2rem;
    margin-left: 1.5rem;
    justify-content: space-evenly;
  }

  .inputB, .buttonB {
    height: var(--height);
    font-family: var(--font-fam);
    border: 0;
    color: var(--color-dark);
    font-size: 1.5rem;
  }
  .buttonB {
    margin-top: 0.3rem;
    color: #f0f8ff;
  }

  .inputB[type="search"] {
    outline: 0; // <-- shold probably remove this for better accessibility, adding for demo aesthetics for now.
    width: 100%;
    background: var(--color-light);
    padding: 0 1.5rem;
    border-radius: var(--rad);
    appearance: none; //for iOS input[type="search"] roundedness issue. border-radius alone doesn't work
    transition: all var(--dur) var(--bez);
    transition-property: width, border-radius;
    z-index: 1;
    position: relative;
  }
  .buttonB {
    display: none; // prevent being able to tab to it
    position: absolute;
    top: 0;
    right: 0;
    width: var(--btn-width);
    font-weight: bold;
    background: var(--color-brand);
    border-radius: 0 var(--rad) var(--rad) 0;
  }
  .inputB:not(:placeholder-shown) {
    border-radius: var(--rad) 0 0 var(--rad);
    width: calc(100% - var(--btn-width));
    + button {
      display: block;
    }
  }
  .labelB {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0;
    border: 0;
    height: 1px;
    width: 1px;
    overflow: hidden;
  }








  